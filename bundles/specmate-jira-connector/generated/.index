<?xml version='1.0' encoding='UTF-8'?>
<repository xmlns="http://www.osgi.org/xmlns/repository/v1.0.0" name="specmate-jira-connector" increment="1537479230869">
  <resource>
    <capability namespace="osgi.identity">
      <attribute name="osgi.identity" value="specmate-jira-connector"/>
      <attribute name="type" value="osgi.bundle"/>
      <attribute name="version" value="0.0.0" type="Version"/>
    </capability>
    <capability namespace="osgi.wiring.bundle">
      <attribute name="bundle-version" value="0.0.0" type="Version"/>
      <attribute name="osgi.wiring.bundle" value="specmate-jira-connector"/>
    </capability>
    <capability namespace="osgi.wiring.host">
      <attribute name="bundle-version" value="0.0.0" type="Version"/>
      <attribute name="osgi.wiring.host" value="specmate-jira-connector"/>
    </capability>
    <capability namespace="osgi.wiring.package">
      <directive name="uses" value="com.specmate.config.api,org.osgi.service.cm,org.osgi.service.log"/>
      <attribute name="version" value="0.0.0" type="Version"/>
      <attribute name="osgi.wiring.package" value="com.specmate.connectors.jira.config"/>
    </capability>
    <capability namespace="osgi.service">
      <attribute name="objectClass" value="com.specmate.connectors.api.IRequirementsSource" type="List&lt;String&gt;"/>
    </capability>
    <capability namespace="osgi.content">
      <attribute name="size" value="8021257" type="Long"/>
      <attribute name="url" value="generated/specmate-jira-connector.jar"/>
      <attribute name="mime" value="application/vnd.osgi.bundle"/>
      <attribute name="osgi.content" value="AF9C43EEA2458BFF0541309CD2CE0710D65C410A92402C720D940812B505176A"/>
    </capability>
    <capability namespace="bndtools.workspace">
      <attribute name="bndtools.workspace" value="file:/home/fs/ecl_neo_mod/workspace"/>
      <attribute name="project.path" value="/specmate-jira-connector"/>
    </capability>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=com.atlassian.analytics.api.annotations))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=com.atlassian.inject))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=com.atlassian.plugin))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=com.atlassian.plugin.event))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=com.atlassian.plugin.event.events))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=com.atlassian.plugin.osgi.factory.descriptor))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=com.atlassian.plugin.web))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.ws.rs.core)(version&gt;=1.1.1))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=net.jcip.annotations))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=net.sf.ehcache))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=net.spy.memcached))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.apache.avalon.framework.logger))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.apache.commons.lang))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.apache.commons.lang.builder))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.apache.log))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.springframework.context))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.springframework.context.event))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=groovy.lang))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=groovy.xml))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=joptsimple))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.apache.tools.ant))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.apache.tools.ant.types))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.aspectj.bridge))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.aspectj.weaver))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.aspectj.weaver.bcel))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.aspectj.weaver.patterns))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.codehaus.groovy.reflection))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.codehaus.groovy.runtime))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.codehaus.groovy.runtime.callsite))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.codehaus.groovy.runtime.typehandling))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.springframework.asm.util))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.yaml.snakeyaml))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.yaml.snakeyaml.constructor))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.yaml.snakeyaml.error))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.yaml.snakeyaml.nodes))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.yaml.snakeyaml.parser))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.yaml.snakeyaml.reader))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.joda.convert))"/>
      <directive name="resolution" value="optional"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=com.specmate.common)(&amp;(version&gt;=1.0.0)(!(version&gt;=2.0.0))))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=com.specmate.config.api)(&amp;(version&gt;=1.0.0)(!(version&gt;=2.0.0))))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=com.specmate.connectors.api)(&amp;(version&gt;=1.0.0)(!(version&gt;=2.0.0))))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=com.specmate.model.base)(&amp;(version&gt;=0.0.0)(!(version&gt;=1.0.0))))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=com.specmate.model.requirements)(&amp;(version&gt;=0.0.0)(!(version&gt;=1.0.0))))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.activation))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.annotation))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.crypto))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.crypto.spec))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.el))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.inject))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.naming))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.naming.directory))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.naming.ldap))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.net))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.net.ssl))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.security.auth.x500))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.servlet))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.servlet.http))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.xml.bind.annotation.adapters))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.xml.namespace))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.xml.parsers))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.xml.stream))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.xml.stream.events))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.xml.transform))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.xml.transform.sax))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=javax.xml.transform.stax))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.apache.log4j))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.apache.log4j.xml))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.ietf.jgss))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.osgi.service.cm)(&amp;(version&gt;=1.5.0)(!(version&gt;=2.0.0))))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.osgi.service.log)(&amp;(version&gt;=1.3.0)(!(version&gt;=2.0.0))))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.slf4j)(&amp;(version&gt;=1.7.0)(!(version&gt;=2.0.0))))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.w3c.dom))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.xml.sax))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.xml.sax.ext))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=org.xml.sax.helpers))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=sun.misc))"/>
    </requirement>
    <requirement namespace="osgi.wiring.package">
      <directive name="filter" value="(&amp;(osgi.wiring.package=com.sun.jersey.server.impl.provider))"/>
    </requirement>
    <requirement namespace="osgi.extender">
      <directive name="filter" value="(&amp;(osgi.extender=osgi.component)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))"/>
    </requirement>
    <requirement namespace="osgi.service">
      <directive name="filter" value="(objectClass=com.specmate.config.api.IConfigService)"/>
      <directive name="effective" value="active"/>
    </requirement>
    <requirement namespace="osgi.service">
      <directive name="filter" value="(objectClass=org.osgi.service.cm.ConfigurationAdmin)"/>
      <directive name="effective" value="active"/>
    </requirement>
    <requirement namespace="osgi.service">
      <directive name="filter" value="(objectClass=org.osgi.service.log.LogService)"/>
      <directive name="effective" value="active"/>
    </requirement>
    <requirement namespace="osgi.ee">
      <directive name="filter" value="(&amp;(osgi.ee=JavaSE)(version=1.8))"/>
    </requirement>
  </resource>
</repository>
